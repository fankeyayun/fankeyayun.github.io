<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Java类中的SerialVersionUID</title>
    <url>/2019/12/07/Java%E7%B1%BB%E4%B8%AD%E7%9A%84SerialVersionUID/</url>
    <content><![CDATA[<p>   Java中的SerialVersionUID用于Java中的序列化机制，在Java的序列化中，尤其是在使用Eclipse这个IDE的时候，总是会warning说需要给类一个SerialVersionUID，<br>换到IDEA的时候，在创建新类的时候不会warning需要SerialVersionUID的。在看其他的代码中，很容易看到以下的代码：</p>
<blockquote>
<p>private static final long serialVersionUID = 1L;</p>
</blockquote>
<h2 id="问题："><a href="#问题：" class="headerlink" title="问题："></a>问题：</h2><ol>
<li><p>1L的值作用？</p>
</li>
<li><p>不写对序列化有什么影响？</p>
</li>
<li><p>保持SerialVersionUID不写，序列化后，类增加或者减少字段，再反序列化会出现什么情况？</p>
</li>
<li><p>固定SerialVersionUID不变，序列化后，类增加或者减少字段，再反序列化会出现什么情况？</p>
</li>
</ol>
<p>序列化<br>简单来说，Java的序列化机制是通过判断类的SerialVersionUID来验证版本一致性的。在进行反序列化的时候，JVM会将传来的字节流中的SerialVersionUID与相对应的实体类中的SerialVersionUID进行比较，如果一致，就认为在上一次序列化到现在的反序列这个过程中，实体类没有发生改变，可以进行反序列化，如果不一致就会报错。</p>
<p>新建一个实体类Person.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> org.sang.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.Serializable;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span> <span class="keyword">implements</span> <span class="title">Serializable</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID=<span class="number">1L</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="comment">//private Integer age;</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Person</span><span class="params">(<span class="keyword">int</span> id,String name)</span></span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id=id;</span><br><span class="line">        <span class="keyword">this</span>.name=name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Person&#123;"</span> +</span><br><span class="line">                <span class="string">"id="</span> + id +</span><br><span class="line">                <span class="string">", name='"</span> + name + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">'&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>新建序列化类SerialTest.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> org.sang.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.FileNotFoundException;</span><br><span class="line"><span class="keyword">import</span> java.io.FileOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.ObjectOutputStream;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SerialTest</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Person person = <span class="keyword">new</span> Person(<span class="number">1</span>, <span class="string">"DimpleTest"</span>);</span><br><span class="line">        System.out.println(<span class="string">"Person Serial: "</span> + person.toString());</span><br><span class="line">        <span class="keyword">try</span> (</span><br><span class="line">                FileOutputStream fileOutputStream = <span class="keyword">new</span> FileOutputStream(<span class="string">"person.txt"</span>);</span><br><span class="line">                ObjectOutputStream objectOutputStream = <span class="keyword">new</span> ObjectOutputStream(fileOutputStream);) &#123;</span><br><span class="line">            objectOutputStream.writeObject(person);</span><br><span class="line">            objectOutputStream.flush();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>新建反序列化测试类DeSerialTest.java</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> org.sang.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DeSerialTest</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Person person = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> (</span><br><span class="line">                FileInputStream fileInputStream = <span class="keyword">new</span> FileInputStream(<span class="string">"Person.txt"</span>);</span><br><span class="line">                ObjectInputStream objectInputStream = <span class="keyword">new</span> ObjectInputStream(fileInputStream);) &#123;</span><br><span class="line">            person = (Person) objectInputStream.readObject();</span><br><span class="line">            System.out.println(<span class="string">"DeSerial Person: "</span> + person.toString());</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException | ClassNotFoundException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<p>至此，需要用到的类已经编写完毕，接下来就是一系列的实验：</p>
<p>实验<br>3. 保持SerialVersionUID不写，序列化后，类增加或者减少字段，再反序列化会出现什么情况？</p>
<ol start="4">
<li>固定SerialVersionUID不变，序列化后，类增加或者减少字段，再反序列化会出现什么情况？</li>
</ol>
<p>为了说明，我们将序列化的过程称为A过程，反序列化的过程称为B过程</p>
<p>实验一：保持SerialVersionUID不写，序列化后，类增加或者减少字段，再反序列化会出现什么情况？</p>
<p>实验步骤：</p>
<ol>
<li><p>运行SerialTest类main方法，在当前项目的根路径下生成person.txt，此为序列化。</p>
</li>
<li><p>在Person类中增加age字段。</p>
</li>
<li><p>运行DeSerialTest类main方法，检查是否异常。</p>
</li>
</ol>
<p>结果：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">/Library/Java/JavaVirtualMachines/jdk1<span class="number">.8</span><span class="number">.0_181</span>.jdk/Contents/Home/bin/java <span class="string">"-javaagent:/Applications/IntelliJ IDEA.app/Contents/lib/idea_rt.jar=59427:/Applications/IntelliJ IDEA.app/Contents/bin"</span> -Dfile.encoding=UTF-<span class="number">8</span> -classpath /Library/Java/JavaVirtualMachines/jdk1<span class="number">.8</span><span class="number">.0_181</span>.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1<span class="number">.8</span><span class="number">.0_181</span>.jdk/Contents/Home/jre/lib/deploy.jar:/Library/Java/JavaVirtualMachines/jdk1<span class="number">.8</span><span class="number">.0_181</span>.jdk/Contents/Home/jre/lib/ext/cldrdata.jar:/Library/Java/JavaVirtualMachines/jdk1<span class="number">.8</span><span class="number">.0_181</span>.jdk/Contents/Home/jre/lib/ext/dnsns.jar:/Library/Java/JavaVirtualMachines/jdk1<span class="number">.8</span><span class="number">.0_181</span>.jdk/Contents/Home/jre/lib/ext/jaccess.jar:/Library/Java/JavaVirtualMachines/jdk1<span class="number">.8</span><span class="number">.0_181</span>.jdk/Contents/Home/jre/lib/ext/jfxrt.jar:/Library/Java/JavaVirtualMachines/jdk1<span class="number">.8</span><span class="number">.0_181</span>.jdk/Contents/Home/jre/lib/ext/localedata.jar:/Library/Java/JavaVirtualMachines/jdk1<span class="number">.8</span><span class="number">.0_181</span>.jdk/Contents/Home/jre/lib/ext/nashorn.jar:/Library/Java/JavaVirtualMachines/jdk1<span class="number">.8</span><span class="number">.0_181</span>.jdk/Contents/Home/jre/lib/ext/sunec.jar:/Library/Java/JavaVirtualMachines/jdk1<span class="number">.8</span><span class="number">.0_181</span>.jdk/Contents/Home/jre/lib/ext/sunjce_provider.jar:/Library/Java/JavaVirtualMachines/jdk1<span class="number">.8</span><span class="number">.0_181</span>.jdk/Contents/Home/jre/lib/ext/sunpkcs11.jar:/Library/Java/JavaVirtualMachines/jdk1<span class="number">.8</span><span class="number">.0_181</span>.jdk/Contents/Home/jre/lib/ext/zipfs.jar:/Library/Java/JavaVirtualMachines/jdk1<span class="number">.8</span><span class="number">.0_181</span>.jdk/Contents/Home/jre/lib/javaws.jar:/Library/Java/JavaVirtualMachines/jdk1<span class="number">.8</span><span class="number">.0_181</span>.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1<span class="number">.8</span><span class="number">.0_181</span>.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1<span class="number">.8</span><span class="number">.0_181</span>.jdk/Contents/Home/jre/lib/jfxswt.jar:/Library/Java/JavaVirtualMachines/jdk1<span class="number">.8</span><span class="number">.0_181</span>.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1<span class="number">.8</span><span class="number">.0_181</span>.jdk/Contents/Home/jre/lib/management-agent.jar:/Library/Java/JavaVirtualMachines/jdk1<span class="number">.8</span><span class="number">.0_181</span>.jdk/Contents/Home/jre/lib/plugin.jar:/Library/Java/JavaVirtualMachines/jdk1<span class="number">.8</span><span class="number">.0_181</span>.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1<span class="number">.8</span><span class="number">.0_181</span>.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1<span class="number">.8</span><span class="number">.0_181</span>.jdk/Contents/Home/lib/ant-javafx.jar:/Library/Java/JavaVirtualMachines/jdk1<span class="number">.8</span><span class="number">.0_181</span>.jdk/Contents/Home/lib/dt.jar:/Library/Java/JavaVirtualMachines/jdk1<span class="number">.8</span><span class="number">.0_181</span>.jdk/Contents/Home/lib/javafx-mx.jar:/Library/Java/JavaVirtualMachines/jdk1<span class="number">.8</span><span class="number">.0_181</span>.jdk/Contents/Home/lib/jconsole.jar:/Library/Java/JavaVirtualMachines/jdk1<span class="number">.8</span><span class="number">.0_181</span>.jdk/Contents/Home/lib/packager.jar:/Library/Java/JavaVirtualMachines/jdk1<span class="number">.8</span><span class="number">.0_181</span>.jdk/Contents/Home/lib/sa-jdi.jar:/Library/Java/JavaVirtualMachines/jdk1<span class="number">.8</span><span class="number">.0_181</span>.jdk/Contents/Home/lib/tools.jar:/Users/chenasiyatu/demo/vhr/hrserver/target/classes:/Users/chenasiyatu/.m2/repository/org/springframework/boot/spring-boot-starter-web/<span class="number">2.0</span><span class="number">.4</span>.RELEASE/spring-boot-starter-web-<span class="number">2.0</span><span class="number">.4</span>.RELEASE.jar:/Users/chenasiyatu/.m2/repository/org/springframework/boot/spring-boot-starter/<span class="number">2.0</span><span class="number">.4</span>.RELEASE/spring-boot-starter-<span class="number">2.0</span><span class="number">.4</span>.RELEASE.jar:/Users/chenasiyatu/.m2/repository/org/springframework/boot/spring-boot/<span class="number">2.0</span><span class="number">.4</span>.RELEASE/spring-boot-<span class="number">2.0</span><span class="number">.4</span>.RELEASE.jar:/Users/chenasiyatu/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/<span class="number">2.0</span><span class="number">.4</span>.RELEASE/spring-boot-autoconfigure-<span class="number">2.0</span><span class="number">.4</span>.RELEASE.jar:/Users/chenasiyatu/.m2/repository/org/springframework/boot/spring-boot-starter-logging/<span class="number">2.0</span><span class="number">.4</span>.RELEASE/spring-boot-starter-logging-<span class="number">2.0</span><span class="number">.4</span>.RELEASE.jar:/Users/chenasiyatu/.m2/repository/ch/qos/logback/logback-classic/<span class="number">1.2</span><span class="number">.3</span>/logback-classic-<span class="number">1.2</span><span class="number">.3</span>.jar:/Users/chenasiyatu/.m2/repository/ch/qos/logback/logback-core/<span class="number">1.2</span><span class="number">.3</span>/logback-core-<span class="number">1.2</span><span class="number">.3</span>.jar:/Users/chenasiyatu/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/<span class="number">2.10</span><span class="number">.0</span>/log4j-to-slf4j-<span class="number">2.10</span><span class="number">.0</span>.jar:/Users/chenasiyatu/.m2/repository/org/apache/logging/log4j/log4j-api/<span class="number">2.10</span><span class="number">.0</span>/log4j-api-<span class="number">2.10</span><span class="number">.0</span>.jar:/Users/chenasiyatu/.m2/repository/org/slf4j/jul-to-slf4j/<span class="number">1.7</span><span class="number">.25</span>/jul-to-slf4j-<span class="number">1.7</span><span class="number">.25</span>.jar:/Users/chenasiyatu/.m2/repository/javax/annotation/javax.annotation-api/<span class="number">1.3</span><span class="number">.2</span>/javax.annotation-api-<span class="number">1.3</span><span class="number">.2</span>.jar:/Users/chenasiyatu/.m2/repository/org/springframework/spring-core/<span class="number">5.0</span><span class="number">.8</span>.RELEASE/spring-core-<span class="number">5.0</span><span class="number">.8</span>.RELEASE.jar:/Users/chenasiyatu/.m2/repository/org/springframework/spring-jcl/<span class="number">5.0</span><span class="number">.8</span>.RELEASE/spring-jcl-<span class="number">5.0</span><span class="number">.8</span>.RELEASE.jar:/Users/chenasiyatu/.m2/repository/org/yaml/snakeyaml/<span class="number">1.19</span>/snakeyaml-<span class="number">1.19</span>.jar:/Users/chenasiyatu/.m2/repository/org/springframework/boot/spring-boot-starter-json/<span class="number">2.0</span><span class="number">.4</span>.RELEASE/spring-boot-starter-json-<span class="number">2.0</span><span class="number">.4</span>.RELEASE.jar:/Users/chenasiyatu/.m2/repository/com/fasterxml/jackson/core/jackson-databind/<span class="number">2.9</span><span class="number">.6</span>/jackson-databind-<span class="number">2.9</span><span class="number">.6</span>.jar:/Users/chenasiyatu/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/<span class="number">2.9</span><span class="number">.0</span>/jackson-annotations-<span class="number">2.9</span><span class="number">.0</span>.jar:/Users/chenasiyatu/.m2/repository/com/fasterxml/jackson/core/jackson-core/<span class="number">2.9</span><span class="number">.6</span>/jackson-core-<span class="number">2.9</span><span class="number">.6</span>.jar:/Users/chenasiyatu/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/<span class="number">2.9</span><span class="number">.6</span>/jackson-datatype-jdk8-<span class="number">2.9</span><span class="number">.6</span>.jar:/Users/chenasiyatu/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/<span class="number">2.9</span><span class="number">.6</span>/jackson-datatype-jsr310-<span class="number">2.9</span><span class="number">.6</span>.jar:/Users/chenasiyatu/.m2/repository/com/fasterxml/jackson/<span class="keyword">module</span>/jackson-<span class="keyword">module</span>-parameter-names/<span class="number">2.9</span><span class="number">.6</span>/jackson-<span class="keyword">module</span>-parameter-names-<span class="number">2.9</span><span class="number">.6</span>.jar:/Users/chenasiyatu/.m2/repository/org/hibernate/validator/hibernate-validator/<span class="number">6.0</span><span class="number">.11</span>.Final/hibernate-validator-<span class="number">6.0</span><span class="number">.11</span>.Final.jar:/Users/chenasiyatu/.m2/repository/javax/validation/validation-api/<span class="number">2.0</span><span class="number">.1</span>.Final/validation-api-<span class="number">2.0</span><span class="number">.1</span>.Final.jar:/Users/chenasiyatu/.m2/repository/org/jboss/logging/jboss-logging/<span class="number">3.3</span><span class="number">.2</span>.Final/jboss-logging-<span class="number">3.3</span><span class="number">.2</span>.Final.jar:/Users/chenasiyatu/.m2/repository/com/fasterxml/classmate/<span class="number">1.3</span><span class="number">.4</span>/classmate-<span class="number">1.3</span><span class="number">.4</span>.jar:/Users/chenasiyatu/.m2/repository/org/openjfx/javafx.base/<span class="number">11.0</span><span class="number">.0</span>-SNAPSHOT/javafx.base-<span class="number">11.0</span><span class="number">.0</span>-<span class="number">20180702.224858</span>-<span class="number">3</span>.jar:/Users/chenasiyatu/.m2/repository/org/openjfx/javafx.base/<span class="number">11.0</span><span class="number">.0</span>-SNAPSHOT/javafx.base-<span class="number">11.0</span><span class="number">.0</span>-<span class="number">20180702.223831</span>-<span class="number">2</span>-linux.jar:/Users/chenasiyatu/.m2/repository/org/openjfx/javafx.base/<span class="number">11.0</span><span class="number">.0</span>-SNAPSHOT/javafx.base-<span class="number">11.0</span><span class="number">.0</span>-<span class="number">20180702.224858</span>-<span class="number">3</span>-mac.jar:/Users/chenasiyatu/.m2/repository/org/openjfx/javafx.base/<span class="number">11.0</span><span class="number">.0</span>-SNAPSHOT/javafx.base-<span class="number">11.0</span><span class="number">.0</span>-<span class="number">20180629.175051</span>-<span class="number">1</span>-win.jar:/Users/chenasiyatu/.m2/repository/org/springframework/spring-web/<span class="number">5.0</span><span class="number">.8</span>.RELEASE/spring-web-<span class="number">5.0</span><span class="number">.8</span>.RELEASE.jar:/Users/chenasiyatu/.m2/repository/org/springframework/spring-beans/<span class="number">5.0</span><span class="number">.8</span>.RELEASE/spring-beans-<span class="number">5.0</span><span class="number">.8</span>.RELEASE.jar:/Users/chenasiyatu/.m2/repository/org/springframework/spring-webmvc/<span class="number">5.0</span><span class="number">.8</span>.RELEASE/spring-webmvc-<span class="number">5.0</span><span class="number">.8</span>.RELEASE.jar:/Users/chenasiyatu/.m2/repository/org/springframework/spring-expression/<span class="number">5.0</span><span class="number">.8</span>.RELEASE/spring-expression-<span class="number">5.0</span><span class="number">.8</span>.RELEASE.jar:/Users/chenasiyatu/.m2/repository/org/springframework/boot/spring-boot-starter-undertow/<span class="number">2.0</span><span class="number">.4</span>.RELEASE/spring-boot-starter-undertow-<span class="number">2.0</span><span class="number">.4</span>.RELEASE.jar:/Users/chenasiyatu/.m2/repository/io/undertow/undertow-core/<span class="number">1.4</span><span class="number">.25</span>.Final/undertow-core-<span class="number">1.4</span><span class="number">.25</span>.Final.jar:/Users/chenasiyatu/.m2/repository/org/jboss/xnio/xnio-api/<span class="number">3.3</span><span class="number">.8</span>.Final/xnio-api-<span class="number">3.3</span><span class="number">.8</span>.Final.jar:/Users/chenasiyatu/.m2/repository/org/jboss/xnio/xnio-nio/<span class="number">3.3</span><span class="number">.8</span>.Final/xnio-nio-<span class="number">3.3</span><span class="number">.8</span>.Final.jar:/Users/chenasiyatu/.m2/repository/io/undertow/undertow-servlet/<span class="number">1.4</span><span class="number">.25</span>.Final/undertow-servlet-<span class="number">1.4</span><span class="number">.25</span>.Final.jar:/Users/chenasiyatu/.m2/repository/org/jboss/spec/javax/annotation/jboss-annotations-api_1<span class="number">.2</span>_spec/<span class="number">1.0</span><span class="number">.2</span>.Final/jboss-annotations-api_1<span class="number">.2</span>_spec-<span class="number">1.0</span><span class="number">.2</span>.Final.jar:/Users/chenasiyatu/.m2/repository/io/undertow/undertow-websockets-jsr/<span class="number">1.4</span><span class="number">.25</span>.Final/undertow-websockets-jsr-<span class="number">1.4</span><span class="number">.25</span>.Final.jar:/Users/chenasiyatu/.m2/repository/org/jboss/spec/javax/websocket/jboss-websocket-api_1<span class="number">.1</span>_spec/<span class="number">1.1</span><span class="number">.3</span>.Final/jboss-websocket-api_1<span class="number">.1</span>_spec-<span class="number">1.1</span><span class="number">.3</span>.Final.jar:/Users/chenasiyatu/.m2/repository/javax/servlet/javax.servlet-api/<span class="number">3.1</span><span class="number">.0</span>/javax.servlet-api-<span class="number">3.1</span><span class="number">.0</span>.jar:/Users/chenasiyatu/.m2/repository/org/glassfish/javax.el/<span class="number">3.0</span><span class="number">.0</span>/javax.el-<span class="number">3.0</span><span class="number">.0</span>.jar:/Users/chenasiyatu/.m2/repository/org/mybatis/spring/boot/mybatis-spring-boot-starter/<span class="number">1.3</span><span class="number">.2</span>/mybatis-spring-boot-starter-<span class="number">1.3</span><span class="number">.2</span>.jar:/Users/chenasiyatu/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/<span class="number">2.0</span><span class="number">.4</span>.RELEASE/spring-boot-starter-jdbc-<span class="number">2.0</span><span class="number">.4</span>.RELEASE.jar:/Users/chenasiyatu/.m2/repository/com/zaxxer/HikariCP/<span class="number">2.7</span><span class="number">.9</span>/HikariCP-<span class="number">2.7</span><span class="number">.9</span>.jar:/Users/chenasiyatu/.m2/repository/org/springframework/spring-jdbc/<span class="number">5.0</span><span class="number">.8</span>.RELEASE/spring-jdbc-<span class="number">5.0</span><span class="number">.8</span>.RELEASE.jar:/Users/chenasiyatu/.m2/repository/org/mybatis/spring/boot/mybatis-spring-boot-autoconfigure/<span class="number">1.3</span><span class="number">.2</span>/mybatis-spring-boot-autoconfigure-<span class="number">1.3</span><span class="number">.2</span>.jar:/Users/chenasiyatu/.m2/repository/org/mybatis/mybatis/<span class="number">3.4</span><span class="number">.6</span>/mybatis-<span class="number">3.4</span><span class="number">.6</span>.jar:/Users/chenasiyatu/.m2/repository/org/mybatis/mybatis-spring/<span class="number">1.3</span><span class="number">.2</span>/mybatis-spring-<span class="number">1.3</span><span class="number">.2</span>.jar:/Users/chenasiyatu/.m2/repository/org/springframework/boot/spring-boot-starter-security/<span class="number">2.0</span><span class="number">.4</span>.RELEASE/spring-boot-starter-security-<span class="number">2.0</span><span class="number">.4</span>.RELEASE.jar:/Users/chenasiyatu/.m2/repository/org/springframework/spring-aop/<span class="number">5.0</span><span class="number">.8</span>.RELEASE/spring-aop-<span class="number">5.0</span><span class="number">.8</span>.RELEASE.jar:/Users/chenasiyatu/.m2/repository/org/springframework/security/spring-security-config/<span class="number">5.0</span><span class="number">.7</span>.RELEASE/spring-security-config-<span class="number">5.0</span><span class="number">.7</span>.RELEASE.jar:/Users/chenasiyatu/.m2/repository/org/springframework/security/spring-security-core/<span class="number">5.0</span><span class="number">.7</span>.RELEASE/spring-security-core-<span class="number">5.0</span><span class="number">.7</span>.RELEASE.jar:/Users/chenasiyatu/.m2/repository/org/springframework/security/spring-security-web/<span class="number">5.0</span><span class="number">.7</span>.RELEASE/spring-security-web-<span class="number">5.0</span><span class="number">.7</span>.RELEASE.jar:/Users/chenasiyatu/.m2/repository/org/springframework/boot/spring-boot-starter-data-redis/<span class="number">2.0</span><span class="number">.4</span>.RELEASE/spring-boot-starter-data-redis-<span class="number">2.0</span><span class="number">.4</span>.RELEASE.jar:/Users/chenasiyatu/.m2/repository/org/springframework/data/spring-data-redis/<span class="number">2.0</span><span class="number">.9</span>.RELEASE/spring-data-redis-<span class="number">2.0</span><span class="number">.9</span>.RELEASE.jar:/Users/chenasiyatu/.m2/repository/org/springframework/data/spring-data-keyvalue/<span class="number">2.0</span><span class="number">.9</span>.RELEASE/spring-data-keyvalue-<span class="number">2.0</span><span class="number">.9</span>.RELEASE.jar:/Users/chenasiyatu/.m2/repository/org/springframework/data/spring-data-commons/<span class="number">2.0</span><span class="number">.9</span>.RELEASE/spring-data-commons-<span class="number">2.0</span><span class="number">.9</span>.RELEASE.jar:/Users/chenasiyatu/.m2/repository/org/springframework/spring-tx/<span class="number">5.0</span><span class="number">.8</span>.RELEASE/spring-tx-<span class="number">5.0</span><span class="number">.8</span>.RELEASE.jar:/Users/chenasiyatu/.m2/repository/org/springframework/spring-oxm/<span class="number">5.0</span><span class="number">.8</span>.RELEASE/spring-oxm-<span class="number">5.0</span><span class="number">.8</span>.RELEASE.jar:/Users/chenasiyatu/.m2/repository/org/slf4j/slf4j-api/<span class="number">1.7</span><span class="number">.25</span>/slf4j-api-<span class="number">1.7</span><span class="number">.25</span>.jar:/Users/chenasiyatu/.m2/repository/redis/clients/jedis/<span class="number">2.9</span><span class="number">.0</span>/jedis-<span class="number">2.9</span><span class="number">.0</span>.jar:/Users/chenasiyatu/.m2/repository/org/apache/commons/commons-pool2/<span class="number">2.5</span><span class="number">.0</span>/commons-pool2-<span class="number">2.5</span><span class="number">.0</span>.jar:/Users/chenasiyatu/.m2/repository/com/alibaba/druid/<span class="number">1.1</span><span class="number">.10</span>/druid-<span class="number">1.1</span><span class="number">.10</span>.jar:/Users/chenasiyatu/.m2/repository/mysql/mysql-connector-java/<span class="number">5.1</span><span class="number">.46</span>/mysql-connector-java-<span class="number">5.1</span><span class="number">.46</span>.jar:/Users/chenasiyatu/.m2/repository/org/apache/poi/poi/<span class="number">3.17</span>/poi-<span class="number">3.17</span>.jar:/Users/chenasiyatu/.m2/repository/commons-codec/commons-codec/<span class="number">1.11</span>/commons-codec-<span class="number">1.11</span>.jar:/Users/chenasiyatu/.m2/repository/org/apache/commons/commons-collections4/<span class="number">4.1</span>/commons-collections4-<span class="number">4.1</span>.jar:/Users/chenasiyatu/.m2/repository/org/springframework/boot/spring-boot-starter-mail/<span class="number">2.0</span><span class="number">.4</span>.RELEASE/spring-boot-starter-mail-<span class="number">2.0</span><span class="number">.4</span>.RELEASE.jar:/Users/chenasiyatu/.m2/repository/org/springframework/spring-context/<span class="number">5.0</span><span class="number">.8</span>.RELEASE/spring-context-<span class="number">5.0</span><span class="number">.8</span>.RELEASE.jar:/Users/chenasiyatu/.m2/repository/org/springframework/spring-context-support/<span class="number">5.0</span><span class="number">.8</span>.RELEASE/spring-context-support-<span class="number">5.0</span><span class="number">.8</span>.RELEASE.jar:/Users/chenasiyatu/.m2/repository/com/sun/mail/javax.mail/<span class="number">1.6</span><span class="number">.1</span>/javax.mail-<span class="number">1.6</span><span class="number">.1</span>.jar:/Users/chenasiyatu/.m2/repository/javax/activation/activation/<span class="number">1.1</span>/activation-<span class="number">1.1</span>.jar:/Users/chenasiyatu/.m2/repository/org/springframework/boot/spring-boot-starter-thymeleaf/<span class="number">2.0</span><span class="number">.4</span>.RELEASE/spring-boot-starter-thymeleaf-<span class="number">2.0</span><span class="number">.4</span>.RELEASE.jar:/Users/chenasiyatu/.m2/repository/org/thymeleaf/thymeleaf-spring5/<span class="number">3.0</span><span class="number">.9</span>.RELEASE/thymeleaf-spring5-<span class="number">3.0</span><span class="number">.9</span>.RELEASE.jar:/Users/chenasiyatu/.m2/repository/org/thymeleaf/thymeleaf/<span class="number">3.0</span><span class="number">.9</span>.RELEASE/thymeleaf-<span class="number">3.0</span><span class="number">.9</span>.RELEASE.jar:/Users/chenasiyatu/.m2/repository/org/attoparser/attoparser/<span class="number">2.0</span><span class="number">.4</span>.RELEASE/attoparser-<span class="number">2.0</span><span class="number">.4</span>.RELEASE.jar:/Users/chenasiyatu/.m2/repository/org/unbescape/unbescape/<span class="number">1.1</span><span class="number">.5</span>.RELEASE/unbescape-<span class="number">1.1</span><span class="number">.5</span>.RELEASE.jar:/Users/chenasiyatu/.m2/repository/org/thymeleaf/extras/thymeleaf-extras-java8time/<span class="number">3.0</span><span class="number">.1</span>.RELEASE/thymeleaf-extras-java8time-<span class="number">3.0</span><span class="number">.1</span>.RELEASE.jar:/Users/chenasiyatu/.m2/repository/org/springframework/boot/spring-boot-starter-websocket/<span class="number">2.0</span><span class="number">.4</span>.RELEASE/spring-boot-starter-websocket-<span class="number">2.0</span><span class="number">.4</span>.RELEASE.jar:/Users/chenasiyatu/.m2/repository/org/springframework/spring-messaging/<span class="number">5.0</span><span class="number">.8</span>.RELEASE/spring-messaging-<span class="number">5.0</span><span class="number">.8</span>.RELEASE.jar:/Users/chenasiyatu/.m2/repository/org/springframework/spring-websocket/<span class="number">5.0</span><span class="number">.8</span>.RELEASE/spring-websocket-<span class="number">5.0</span><span class="number">.8</span>.RELEASE.jar:/Users/chenasiyatu/.m2/repository/org/springframework/boot/spring-boot-starter-cache/<span class="number">2.0</span><span class="number">.4</span>.RELEASE/spring-boot-starter-cache-<span class="number">2.0</span><span class="number">.4</span>.RELEASE.jar org.sang.test.DeSerialTest</span><br><span class="line">java.io.InvalidClassException: org.sang.test.Person; local class incompatible: stream classdesc serialVersionUID = 123456789, local class serialVersionUID = -7561000419652998964</span><br><span class="line">	at java.io.ObjectStreamClass.initNonProxy(ObjectStreamClass.java:<span class="number">699</span>)</span><br><span class="line">	at java.io.ObjectInputStream.readNonProxyDesc(ObjectInputStream.java:<span class="number">1885</span>)</span><br><span class="line">	at java.io.ObjectInputStream.readClassDesc(ObjectInputStream.java:<span class="number">1751</span>)</span><br><span class="line">	at java.io.ObjectInputStream.readOrdinaryObject(ObjectInputStream.java:<span class="number">2042</span>)</span><br><span class="line">	at java.io.ObjectInputStream.readObject0(ObjectInputStream.java:<span class="number">1573</span>)</span><br><span class="line">	at java.io.ObjectInputStream.readObject(ObjectInputStream.java:<span class="number">431</span>)</span><br><span class="line">	at org.sang.test.DeSerialTest.main(DeSerialTest.java:<span class="number">12</span>)</span><br></pre></td></tr></table></figure>

<p>Process finished with exit code 0<br>报错提示这两个类不匹配，并给出了stream中的SerialVersionUID为-5720418216692542201，本地的Person中的SerialVersionUID为6618704986964704271。</p>
<p>当实现java.io.Serializable接口的类没有显式地定义一个serialVersionUID变量时候，Java序列化机制会根据编译的Class自动生成一个serialVersionUID作序列化版本比较用，这种情况下，如果Class文件(类名，方法名等)没有发生变化(增加空格，换行，增加注释等等)，就算再编译多次，serialVersionUID也不会变化的。</p>
<p>实验二：固定SerialVersionUID不变，序列化后，类增加字段，再反序列化会出现什么情况？</p>
<ol>
<li><p>在Person类中增加private static final long serialVersionUID = 123456789L;</p>
</li>
<li><p>运行SerialTest类main方法，在当前项目的根路径下生成person.txt，此为序列化。</p>
</li>
<li><p>Person类中增加Intege age字段。</p>
</li>
<li><p>运行DeSerialTest类main方法，检查是否异常。</p>
</li>
</ol>
<h2 id="结果："><a href="#结果：" class="headerlink" title="结果："></a>结果：</h2><p>无异常，age字段被A端忽略，赋值为null，如果age为基本类型int，那么会被赋值为0.</p>
<p>实验三：固定SerialVersionUID不变，序列化后，类减少字段，再反序列化会出现什么情况？</p>
<ol>
<li><p>在Person类中增加private static final long serialVersionUID = 1L;</p>
</li>
<li><p>运行SerialTest类main方法，在当前项目的根路径下生成person.txt，此为序列化。</p>
</li>
<li><p>Person类中删除String name字段。</p>
</li>
<li><p>运行DeSerialTest类main方法，检查是否异常。</p>
</li>
</ol>
<p>结果：</p>
<p>无异常，name字段被B端忽略。</p>
<ol>
<li>1如果不写SerialVersionUID，那么JVM会自动生成SerialVersionUID，并且保证同一份文件只会生成同一个SerialVersionUID，如果对类作出修改会生成不同的SerialVersionUID。</li>
</ol>
<ol start="2">
<li><p>SerialVersionUID的作用是区分版本，即不同版本的SerialVersionUID应该是不一样的。</p>
</li>
<li><p>如果我们不希望通过编译来强制划分软件版本，即实现序列化接口的实体能够兼容先前版本，就需要显式地定义一个名为serialVersionUID，类型为long的变量，不修改这个变量值的序列化实体都可以相互进行串行化和反串行化。</p>
</li>
</ol>
]]></content>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>springboot传文件到腾讯云存储</title>
    <url>/2019/12/02/spring%20boot%E4%BC%A0%E6%96%87%E4%BB%B6%E5%88%B0%E8%85%BE%E8%AE%AF%E4%BA%91%E5%AD%98%E5%82%A8/</url>
    <content><![CDATA[<h2 id="依赖"><a href="#依赖" class="headerlink" title="依赖"></a>依赖</h2><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="string">&lt;!--</span> <span class="string">腾讯云</span> <span class="string">--&gt;</span></span><br><span class="line"><span class="string">&lt;dependency&gt;</span></span><br><span class="line">    <span class="string">&lt;groupId&gt;com.qcloud&lt;/groupId&gt;</span></span><br><span class="line">    <span class="string">&lt;artifactId&gt;cos_api&lt;/artifactId&gt;</span></span><br><span class="line">    <span class="string">&lt;version&gt;5.6.8&lt;/version&gt;</span></span><br><span class="line">    <span class="string">&lt;exclusions&gt;</span></span><br><span class="line">        <span class="string">&lt;exclusion&gt;</span></span><br><span class="line">            <span class="string">&lt;groupId&gt;org.slf4j&lt;/groupId&gt;</span></span><br><span class="line">            <span class="string">&lt;artifactId&gt;slf4j-log4j12&lt;/artifactId&gt;</span></span><br><span class="line">        <span class="string">&lt;/exclusion&gt;</span></span><br><span class="line">    <span class="string">&lt;/exclusions&gt;</span></span><br><span class="line"><span class="string">&lt;/dependency&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="全局配置文件"><a href="#全局配置文件" class="headerlink" title="全局配置文件"></a>全局配置文件</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">#腾讯云地址 </span><br><span class="line">tencent:</span><br><span class="line">  path: https:<span class="comment">//images-12048382642.cos.ap-guangzhou.myqcloud.com</span></span><br></pre></td></tr></table></figure>

<h2 id="工具"><a href="#工具" class="headerlink" title="工具"></a>工具</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.bk.cloudstorage.util;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.qcloud.cos.COSClient;</span><br><span class="line"><span class="keyword">import</span> com.qcloud.cos.ClientConfig;</span><br><span class="line"><span class="keyword">import</span> com.qcloud.cos.auth.BasicCOSCredentials;</span><br><span class="line"><span class="keyword">import</span> com.qcloud.cos.auth.COSCredentials;</span><br><span class="line"><span class="keyword">import</span> com.qcloud.cos.auth.COSCredentialsProvider;</span><br><span class="line"><span class="keyword">import</span> com.qcloud.cos.exception.CosClientException;</span><br><span class="line"><span class="keyword">import</span> com.qcloud.cos.exception.CosServiceException;</span><br><span class="line"><span class="keyword">import</span> com.qcloud.cos.model.GetObjectRequest;</span><br><span class="line"><span class="keyword">import</span> com.qcloud.cos.model.ObjectMetadata;</span><br><span class="line"><span class="keyword">import</span> com.qcloud.cos.model.PutObjectRequest;</span><br><span class="line"><span class="keyword">import</span> com.qcloud.cos.model.PutObjectResult;</span><br><span class="line"><span class="keyword">import</span> com.qcloud.cos.region.Region;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.util.Random;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TencentUtil</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 此处填写的存储桶名称</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String bucketName = <span class="string">""</span>;</span><br><span class="line">    <span class="comment">//secretId</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String SecretId = <span class="string">""</span>;</span><br><span class="line">    <span class="comment">//SecretKey</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String SecretKey = <span class="string">""</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 1 初始化用户身份信息(secretId, secretKey，可在腾讯云后台中的API密钥管理中查看！</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> COSCredentials cred = <span class="keyword">new</span> BasicCOSCredentials(SecretId,SecretKey);</span><br><span class="line">    <span class="comment">//// 2 设置bucket的区域, COS地域的简称请参照</span></span><br><span class="line">    <span class="comment">//    // https://cloud.tencent.com/document/product/436/6224，根据自己创建的存储桶选择地区</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> ClientConfig clientConfig = <span class="keyword">new</span> ClientConfig(<span class="keyword">new</span> Region(<span class="string">"ap-guangzhou"</span>));</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 简单文件上传, 最大支持 5 GB, 适用于小文件上传, 建议 20 M 以下的文件使用该接口 大文件上传请参照 API 文档高级 API 上传</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> localfile 要上传的文件</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">uploadfile</span><span class="params">(File localfile,String pathPrefix)</span></span>&#123;</span><br><span class="line">        COSClient cosClient = <span class="keyword">new</span> COSClient(cred,clientConfig);</span><br><span class="line">        String fileName = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            fileName =localfile.getName();</span><br><span class="line">            String subString = fileName.substring(fileName.lastIndexOf(<span class="string">"."</span>));</span><br><span class="line">            Random random = <span class="keyword">new</span> Random();</span><br><span class="line">            <span class="comment">// 指定要上传到 COS 上的路径</span></span><br><span class="line">            fileName = pathPrefix+<span class="string">"/"</span>+random.nextInt(<span class="number">10000</span>)+System.currentTimeMillis()+subString;</span><br><span class="line">            PutObjectRequest putObjectRequest = <span class="keyword">new</span> PutObjectRequest(bucketName,fileName,localfile);</span><br><span class="line">            PutObjectResult putObjectResult = cosClient.putObject(putObjectRequest);</span><br><span class="line">        &#125;<span class="keyword">catch</span> (Exception e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;<span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="comment">// 关闭客户端(关闭后台线程)</span></span><br><span class="line">            cosClient.shutdown();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> fileName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">downFile</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="comment">// 生成cos客户端</span></span><br><span class="line">        COSClient cosClient = <span class="keyword">new</span> COSClient(cred,clientConfig);</span><br><span class="line">        <span class="comment">//要下载的文件路径和名称</span></span><br><span class="line">        String key = <span class="string">"down"</span>;</span><br><span class="line">        <span class="comment">// 指定文件的存储路径</span></span><br><span class="line">        File downFile = <span class="keyword">new</span> File(<span class="string">""</span>);</span><br><span class="line">        <span class="comment">// 指定要下载的文件所在的 bucket 和对象键</span></span><br><span class="line">        GetObjectRequest getObjectRequest = <span class="keyword">new</span> GetObjectRequest(bucketName,key);</span><br><span class="line">        ObjectMetadata down = cosClient.getObject(getObjectRequest,downFile);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 删除文件</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">deletefile</span><span class="params">(String key)</span> <span class="keyword">throws</span> CosClientException, CosServiceException </span>&#123;</span><br><span class="line">        <span class="comment">// 生成cos客户端</span></span><br><span class="line">        COSClient cosclient = <span class="keyword">new</span> COSClient(cred, clientConfig);</span><br><span class="line">        <span class="comment">// 指定要删除的 bucket 和路径</span></span><br><span class="line">        cosclient.deleteObject(bucketName, key);</span><br><span class="line">        <span class="comment">// 关闭客户端(关闭后台线程)</span></span><br><span class="line">        cosclient.shutdown();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p><a href="https://console.cloud.tencent.com/cos5/bucket" target="_blank" rel="noopener">腾讯云存储地址</a><br><img src="https://img-blog.csdnimg.cn/20191206214532241.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0NIRU5HWFVZVUFOMDk=,size_16,color_FFFFFF,t_70" alt="存储桶名称以及所属地域相应的配置在工具里"><br><a href="https://console.cloud.tencent.com/cam/capi" target="_blank" rel="noopener">密钥地址</a><br><img src="https://img-blog.csdnimg.cn/20191206214833199.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L0NIRU5HWFVZVUFOMDk=,size_16,color_FFFFFF,t_70" alt="SecretId以及SecretKey配置工具里"></p>
<h2 id="控制层"><a href="#控制层" class="headerlink" title="控制层"></a>控制层</h2><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.bk.cloudstorage.controller;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.bk.cloudstorage.util.TencentCOS;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Controller;</span><br><span class="line"><span class="keyword">import</span> org.springframework.ui.Model;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestMapping;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.RequestParam;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.multipart.MultipartFile;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">imageUploadController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value</span>(<span class="string">"$&#123;tencent.path&#125;"</span>)</span><br><span class="line">    <span class="keyword">private</span> String IMAGE_PATH;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/upload"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">upload</span><span class="params">(@RequestParam(<span class="string">"file"</span>)</span>MultipartFile mulipartFilet,</span></span><br><span class="line"><span class="function">                         @<span class="title">RequestParam</span><span class="params">(<span class="string">"username"</span>)</span> String username, Model model) <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        String fh=<span class="string">""</span>;</span><br><span class="line">        String fileName = mulipartFilet.getOriginalFilename();</span><br><span class="line">        <span class="comment">//判断有无后缀</span></span><br><span class="line">        <span class="keyword">if</span> (fileName.lastIndexOf(<span class="string">"."</span>)&lt;<span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"上传图片格式不正确!"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//获取文件后缀</span></span><br><span class="line">        String prefix = fileName.substring(fileName.lastIndexOf(<span class="string">"."</span>));</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!prefix.equalsIgnoreCase(<span class="string">".jpg"</span>)&amp;&amp;!prefix.equalsIgnoreCase(<span class="string">".jpeg"</span>)</span><br><span class="line">        &amp;&amp; !prefix.equalsIgnoreCase(<span class="string">".svg"</span>))&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"上传格式不正确!"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//使用uuid作为文件名，防止生成的临时文件重复</span></span><br><span class="line">        <span class="keyword">final</span> File excelFile =File.createTempFile(<span class="string">"imagesFile-"</span> + System.currentTimeMillis(), prefix);</span><br><span class="line">        <span class="comment">//将Multifile转换成File</span></span><br><span class="line">        mulipartFilet.transferTo(excelFile);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//调用腾讯云工具上传文件</span></span><br><span class="line">        String imageName = TencentCOS.uploadfile(excelFile, <span class="string">"avatar"</span>);</span><br><span class="line">        <span class="comment">//存入图片名称，用于网页显示</span></span><br><span class="line">       <span class="comment">// model.addAttribute("imageName", imageName);</span></span><br><span class="line">        <span class="keyword">return</span> <span class="string">"上传成功！"</span>;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 删除临时文件</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> files 临时文件，可变参数</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">deleteFile</span><span class="params">(File... files)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (File file : files) &#123;</span><br><span class="line">            <span class="keyword">if</span> (file.exists()) &#123;</span><br><span class="line">                file.delete();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


]]></content>
      <tags>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title>单元测试注解的原理</title>
    <url>/2019/11/28/%E6%B3%A8%E8%A7%A3/</url>
    <content><![CDATA[<h2 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h2><p>  使用@Test对testExcute()方法进行注解，该注解本身不做任何事情，但是编译器要确保在其构造路径上必须有@Test注解的定义。例子中通过反射机制来运行testExecute()方法的工具。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> annotations;</span><br><span class="line"><span class="keyword">import</span> net.mindview.atunit.*;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Testable</span></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">execute</span><span class="params">()</span></span>&#123;</span><br><span class="line">     System.out.println(<span class="string">"Executing.."</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="meta">@Test</span> <span class="function"><span class="keyword">void</span> <span class="title">testExecute</span><span class="params">()</span></span>&#123;</span><br><span class="line">  execute();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>   被注解的方法与其他的方法没有什么区别，在上面的例子中，注解@Test可以与任何修饰符共同作用与方法，例如public，static或者是void。</p>
<h2 id="定义注解"><a href="#定义注解" class="headerlink" title="定义注解"></a>定义注解</h2><p>   看看@Test的注解类：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> net.mindview.atunit;</span><br><span class="line"><span class="keyword">import</span> java.lang.annotation.*;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Target</span>(ElementType.METHOD)</span><br><span class="line"><span class="meta">@Retention</span>(RetentionPolicy.RUNTIME)</span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> Test&#123;&#125;;</span><br></pre></td></tr></table></figure>
<p>   注解类其实是一个空的接口，在定义注解时，会需要一些元注解(meta-annotation)，如@Target和@Retention。</p>
<ul>
<li><p>@Target:  用来定义你的注解将应用于什么地方(打比方是一个方法或者是一个域)。</p>
</li>
<li><p>@Retention:  用来定义该注解在哪一个级别可用，在源码中(SOURCE)，类文件(CLASS)或者运行时(RUNTIME)。</p>
<p>网上记载: 在注解中，一般都会包含一些元素以表示某些值，当分析处理注解时，程序或者是工具可以利用这些值。注解的元素看起来像接口的方法，唯一的区别是你可以为其指定默认值。没有元素的注解称为 “标记注解”，例如上面的@Test。<br>下面是一个简单的注解，我们可以用它来跟踪一个项目中的用例，如果一个方法或一组方法实现了某个用例的需求，那么程序员可以为此方法加上该注解。</p>
</li>
</ul>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.lang.annotation;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Target</span>(ElementType.METHOD)</span><br><span class="line"><span class="meta">@Retention</span>(RetentionPolicy.RUNTIME)</span><br><span class="line"><span class="keyword">public</span> <span class="meta">@interface</span> UseCase&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">id</span><span class="params">()</span></span>;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> String <span class="title">description</span><span class="params">()</span> <span class="keyword">default</span> "no description"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>注意，id和description类似方法定义。由于编译器会对id进行类型检查，因此将用例文档的追踪数据库与源码相关联是可靠的。description元素有一个default值，如果在注解某个方法时没有给出description的值，则该注解的处理器就会使用此元素的默认值。<br>在下面的类中三个方法被注解为用例:</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PassworUtils</span></span>&#123;</span><br><span class="line">  <span class="meta">@UseCase</span>(id=<span class="number">47</span>,description = <span class="string">"Passwords must contain at least one numeric"</span>)</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">validatePassword</span><span class="params">(String password)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (passwor.matches(<span class="string">"\\w*\\d\\w*"</span>));</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="meta">@UseCase</span>(id = <span class="number">48</span>)</span><br><span class="line">  <span class="function"><span class="keyword">public</span> String <span class="title">encryptPassword</span><span class="params">(String password)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> StringBuilder(password).reverse().toString();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="meta">@UseCase</span>(id =<span class="number">49</span>,description = <span class="string">"New passwords can't equal previously used ones"</span>)</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">checkForNewPassword</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">  List&lt;String&gt;prevPasswords,String password</span></span></span><br><span class="line"><span class="function"><span class="params">  )</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> !prevPasswords.contains(password);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>   注解的元素在使用时表现为名一值对的形式，并需要置于@UseCase声明之后的括号内。在encryptPassword()方法的注解中，并没有给出description元素的值，因此，在UseCase的注解处理器分析这个类时会使用该元素的默认值。</p>
<h2 id="元注解"><a href="#元注解" class="headerlink" title="元注解"></a>元注解</h2><table>
<thead>
<tr>
<th>名称</th>
<th>作用</th>
</tr>
</thead>
<tbody><tr>
<td>@Target</td>
<td>表示该注解可以用于什么地方。可能的ElementType参数包括包括: CONSTRUTOR: 构造器的声明。FIELD:域声明(包括enum实例)。LOCAL_VARABLE: 局部变量声明。METHOD:方法声明。PACKAGE:包声明。PARAMETER:参数声明。TYPE:类，接口(注解类型)或enum声明</td>
</tr>
<tr>
<td>@Retention</td>
<td>表示需要在什么级别保存该注解信息。可选的RetentionPolicy参数包括:SOURCE: 注解将被编译器丢弃。CLASS:注解在class文件中用，但会被jvm丢弃。RUNTIME: vm运行将在运行期也保留注解，因此可以通过反射机制读取注解的信息。</td>
</tr>
<tr>
<td>@Documented</td>
<td>将此注解包含在Javadoc中</td>
</tr>
<tr>
<td>@Inherited</td>
<td>允许子类继承父类中的方法</td>
</tr>
<tr>
<td>很多时候，我们主要是定义自己的注解，并编写自己的处理器来处理他们。</td>
<td></td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>java</category>
      </categories>
  </entry>
  <entry>
    <title>仓库地址</title>
    <url>/2019/11/26/hello-world/</url>
    <content><![CDATA[<p><a href="https://github.com/fankeyayun" target="_blank" rel="noopener">fankeyayun</a> This is my very first post.</p>
]]></content>
      <categories>
        <category>git</category>
      </categories>
  </entry>
</search>
